<launch>
	<!--Urdf file path-->
	<!-- <param name="robot_description" textfile="$(find hitbot_model)/urdf/hitbot_model.urdf"/> -->
    <!-- <param name="robot_description"  command="$(find xacro)/xacro $(find hitbot_model)/xacro/hitbot_model.xacro"/> -->
	<arg name="initial_joint_positions" default=" -J joint1 0 -J joint2 0.6978 -J joint3 -1.2855 -J joint4 0.4618" doc="Initial joint configuration of the robot"/>
	<arg name="world_pose" default="-x 0 -y 0 -z 0 -R 0 -P 0 -Y 0" doc="Pose to spawn the robot at"/>

    <param name="robot_description" command="$(find xacro)/xacro $(find hitbot_model)/xacro/hitbot_model.xacro"/>
		   

	<!--spawn a empty gazebo world-->
	<include file="$(find gazebo_ros)/launch/empty_world.launch" />
	<!-- <node name="tf_footprint_base" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 body_link world 40" /> -->

	<!--spawn model-->
	<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" 
	      args="-param robot_description 
		  		$(arg world_pose) $(arg initial_joint_positions)
				-urdf -model hitbot_model
				-unpause" />

	<!--Load and launch the joint trajectory controller-->
	<rosparam file ="$(find hitbot_model)/config/hitbot_scara_controller.yaml" command="load"/>
	<!-- <node name= "arm_controller_spawner" pkg= "controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller  robot_arm_controller"/> -->

	<!-- For Moveit Traj Control -->
	<node name= "joint_state_controller_spawner" pkg= "controller_manager" type="controller_manager" respawn="false" output="screen" args="spawn joint_state_controller"/>

	<node name= "arm_controller_spawner" pkg= "controller_manager" type="controller_manager" respawn="false" output="screen" args="spawn robot_arm_controller"/>
	
	<!-- For Moveit Servo Control -->
	<node name= "joints_controller_spawner" pkg= "controller_manager" type="controller_manager" respawn="false" output="screen" args="load robot_joints_controller"/>

	<!-- Robot State Publisher for TF of each joint: publishes all the current states of the joint, then RViz can visualize -->
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
	</node>

	
</launch>
